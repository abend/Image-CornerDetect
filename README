NAME
    Image::CornerDetect - An implementation of the Xiaochen He corner
    detection algorithm.

SYNOPSIS
      use Image::CornerDetect;
      my $detector = Image::CornerDetect->new();
      my @corners = $detector->process($filename);

DESCRIPTION
    Perform corner detection on an input image, returning a list of corner
    points.

    Converted from the Matlab at
    http://www.mathworks.com/matlabcentral/fileexchange/7652-a-corner-detect
    or-based-on-global-and-local-curvature-properties

USAGE
      use Image::CornerDetect;
      my $detector = Image::CornerDetect->new();
      my @corners = $detector->process($filename);

BUGS
    You tell me.

AUTHOR
        Sasha Kovar
        CPAN ID: ABEND
        sasha-cpan@arcocene.org

COPYRIGHT
    This program licensed under the BSD license.

    The full text of the license can be found in the LICENSE file included
    with this module.

SEE ALSO
    Image::EdgeDetect

  my $detector = Image::CornerDetect->new(\%args)
    Create a new corner detector, passing in parameters to override the
    defaults if desired. Parameters are:

      sig - Denotes the standard deviation of the Gaussian filter when
          computing curvature.  The default sig is 3.

      endpoint - A flag to control whether add the end points of a curve
          as corner. The default value is 1.

      c - Denotes the minimum ratio of major axis to minor axis of an
          ellipse, whose vertex could be detected as a corner by proposed
          detector.  The default value is 1.5.

      t_angle - Denotes the maximum obtuse angle that a corner can have
          when it is detected as a true corner, default value is 162.

  $detector->process($in)
    Perform corner detection on the input image (which must be a canny edge
    detected image), returning a list of corner points. ([x1, y1], [x2,
    y2],...). Input may be a filename or Image::Magick object.

